@using System;
@using Sandbox;
@using Sandbox.UI;
@using Facepunch.CoreWars;
@using Sandbox.UI.Construct;
@using Facepunch.Voxels;
@using Facepunch.CoreWars.UI;
@using System.Collections.Generic;

@namespace Facepunch.CoreWars.Editor
@attribute [StyleSheet( "/ui/editor/EditorHotbar.scss" )]
@inherits Panel

@if ( Local.Pawn is not EditorPlayer ) return;
@if ( !VoxelWorld.Current.IsValid() ) return;

@{
    var player = Local.Pawn as EditorPlayer;
}

<root>
    @for ( ushort i = 0; i < player.HotbarBlockIds.Count; i++ )
    {
        <EditorHotbarSlot Slot=@i IsSelected=@(player.CurrentHotbarIndex == i) BlockId=@(player.HotbarBlockIds[i])></EditorHotbarSlot>
    }

    @{
        var selected = player.HotbarBlockIds[player.CurrentHotbarIndex];
        var blockType = VoxelWorld.Current.GetBlockType( selected );
    }

    <label class="current-block">@blockType.FriendlyName</label>
</root>

@code
{
    public static EditorHotbar Current { get; private set; }

    public EditorHotbar()
    {
        Current = this;
    }

    protected override int BuildHash()
    {
        var player = Local.Pawn as EditorPlayer;
        var code = 0;

        for ( var i = 0; i < player.HotbarBlockIds.Count; i++ )
        {
            code = HashCode.Combine( code, player.HotbarBlockIds[i] );
        }

        return HashCode.Combine( code, player.CurrentHotbarIndex );
    }
}
