@using System;
@using Sandbox;
@using Sandbox.UI;
@using Facepunch.CoreWars;
@using Sandbox.UI.Construct;
@using Facepunch.Voxels;
@using Facepunch.CoreWars.UI;
@using System.Collections.Generic;
@using Facepunch.CoreWars.Utility;

@namespace Facepunch.CoreWars.Editor
@attribute [StyleSheet( "/ui/editor/EditorBlockItem.scss" )]
@inherits Panel
@implements ITooltipProvider
@implements IDraggable

<root>
    <div @ref="Icon" class="icon"></div>
</root>

@code
{
    public BlockType BlockType { get; set; }
    public byte BlockId { get; set; }
    public float IconSize => Box.Rect.Size.Length;
    public Panel Icon { get; set; }

    public string Description => BlockType.Description;
    public IReadOnlySet<string> Tags { get; set; }
    public string Name => BlockType.FriendlyName;
    public Color Color => Color.White;

    protected override void OnMouseOver( MousePanelEvent e )
    {
        if ( BlockType.IsValid() )
        {
            CustomTooltip.Show( this );
        }

        base.OnMouseOver( e );
    }

    protected override void OnMouseOut( MousePanelEvent e )
    {
        CustomTooltip.Hide( this );
        base.OnMouseOut( e );
    }

    protected override void OnMouseDown( MousePanelEvent e )
    {
        Draggable.Start( this, DraggableMode.Move );
        base.OnMouseDown( e );
    }

    protected override void OnMouseUp( MousePanelEvent e )
    {
        Draggable.Stop( this );
        base.OnMouseUp( e );
    }

    public string GetIconTexture()
    {
        var block = VoxelWorld.Current.GetBlockType( BlockId );
        return $"textures/blocks/corewars/color/{ block.DefaultTexture }.png";
    }

    protected override void OnAfterTreeRender( bool firstTime )
    {
        BlockType = VoxelWorld.Current.GetBlockType( BlockId );
        Tags = BlockType.GetItemTags();

        var icon = $"textures/blocks/corewars/color/{BlockType.DefaultTexture}.png";

        if ( !string.IsNullOrEmpty( BlockType.Icon ) )
            icon = BlockType.Icon;

        if ( !string.IsNullOrEmpty( icon ) )
        {
            if ( CoreWars.Util.FileExistsCached( icon ) )
            {
                Icon.Style.SetBackgroundImage( icon );
                Icon.Style.BackgroundSizeX = Length.Cover;
                Icon.Style.BackgroundSizeY = Length.Cover;
                Icon.Style.BackgroundTint = BlockType.TintColor;
            }
        }
        else
        {
            Icon.Style.BackgroundImage = null;
        }

        base.OnAfterTreeRender( firstTime );
    }
}
