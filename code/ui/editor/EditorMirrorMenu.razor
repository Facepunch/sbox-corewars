@using System;
@using Sandbox;
@using Sandbox.UI;
@using Facepunch.CoreWars;
@using Sandbox.UI.Construct;

@namespace Facepunch.CoreWars.Editor
@attribute [StyleSheet( "/ui/editor/EditorMirrorMenu.scss" )]
@inherits Panel

<root>
    <div class="modal">
        <label class="title">Mirror Blocks</label>

        <SimpleForm @ref="PropertyForm">

        </SimpleForm>
    </div>
</root>


@code
{
	public static EditorMirrorMenu Current { get; private set; }

	public SimpleForm PropertyForm { get; set; }
	public Checkbox FromOrigin { get; set; }
	public Checkbox XAxis { get; set; }
	public SliderControl XOriginOffset { get; set; }
	public Checkbox YAxis { get; set; }
    public SliderControl YOriginOffset { get; set; }

	public static void Open()
	{
		Current?.Delete();
		Current = new EditorMirrorMenu();
		Current.PopulateItems();

		Game.RootPanel.FindPopupPanel().AddChild( Current );
	}

	public void PopulateItems()
	{
		PropertyForm.Clear();
		PropertyForm.StartGroup();

		XOriginOffset = new SliderControl();
		XOriginOffset.Min = -10f;
		XOriginOffset.Max = 10f;
		XOriginOffset.Value = 0f;
		XOriginOffset.Step = 1f;

        YOriginOffset = new SliderControl();
		YOriginOffset.Min = -10f;
		YOriginOffset.Max = 10f;
		YOriginOffset.Value = 0f;
		YOriginOffset.Step = 1f;

		FromOrigin = new Checkbox();
		XAxis = new Checkbox();
		YAxis = new Checkbox();

		PropertyForm.AddRowToGroup( "From Origin", FromOrigin );
		PropertyForm.AddRowToGroup( "X Axis", XAxis );
		PropertyForm.AddRowToGroup( "X Origin Offset", XOriginOffset );
		PropertyForm.AddRowToGroup( "Y Axis", YAxis );
		PropertyForm.AddRowToGroup( "Y Origin Offset", YOriginOffset );

		PropertyForm.EndGroup();

		var mirrorBtn = PropertyForm.Add.Button( "Mirror", "mirrorBtn" );
		mirrorBtn.AddClass( "editor-button" );
		mirrorBtn.AddEventListener( "onclick", () => Save() );

		var cancelBtn = PropertyForm.Add.Button( "Cancel", "cancelBtn" );
		cancelBtn.AddClass( "editor-button secondary" );
		cancelBtn.AddEventListener( "onclick", () => Cancel() );
	}

	protected virtual void Save()
	{
		if ( Game.LocalPawn is EditorPlayer player )
		{
			if ( player.Tool is MirrorBlocksTool tool )
			{
				tool.Mirror( XAxis.Checked, YAxis.Checked, FromOrigin.Checked, XOriginOffset.Value.CeilToInt(), YOriginOffset.Value.CeilToInt() );
			}
		}

		Delete();
		Current = null;
	}

	protected virtual void Cancel()
	{
		if ( Game.LocalPawn is EditorPlayer player )
		{
			if ( player.Tool is MirrorBlocksTool tool )
			{
				tool.Cancel();
			}
		}

		Delete();
		Current = null;
	}
}
