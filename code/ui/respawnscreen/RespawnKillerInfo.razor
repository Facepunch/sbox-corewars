@using System;
@using Sandbox;
@using Sandbox.UI;
@using Facepunch.CoreWars;
@using Sandbox.UI.Construct;

@namespace Facepunch.CoreWars.UI
@attribute [StyleSheet( "/ui/respawnscreen/RespawnKillerInfo.scss" )]
@inherits Panel

<root>
    <div class="respawn-box team-box player-name">
        <div class="respawn-header">
            <label>Killed By</label>
        </div>
        <div class="respawn-body">
            <img @ref="KillerAvatar" class="avatar" />
            <label @ref="KillerName">Name</label>
        </div>
    </div>

    <div class="respawn-box team-box weapon">
        <div class="respawn-header">
            <label>Using</label>
        </div>
        <div class="respawn-body">
            <label @ref="WeaponName">Weapon</label>
        </div>
    </div>
</root>


@code
{
	public Image KillerAvatar { get; private set; }
	public Label KillerName { get; private set; }
	public Label WeaponName { get; private set; }

	private Team CurrentTeam { get; set; }

	public void SetVisible( bool isVisible )
	{
		SetClass( "hidden", !isVisible );
	}

    public void Update( CoreWars.Player player )
	{
		KillerAvatar.SetTexture( $"avatar:{player.Client.SteamId}" );
		KillerName.Style.FontColor = player.Team.GetColor().Darken( 0.4f );
		KillerName.Text = player.Client.Name;
		SetTeam( player.Team );
	}

	public void Update( IKillFeedInfo killer )
	{
		KillerAvatar.Texture = Texture.Load( FileSystem.Mounted, killer.KillFeedIcon );
		KillerName.Style.FontColor = killer.KillFeedTeam.GetColor().Darken( 0.4f );
		KillerName.Text = killer.KillFeedName;
		SetTeam( killer.KillFeedTeam );
	}

	public void Update( string killerName )
	{
		KillerAvatar.Texture = Texture.Load( FileSystem.Mounted, "textures/ui/skull.png" );
		KillerName.Style.FontColor = Team.None.GetColor().Darken( 0.4f );
		KillerName.Text = killerName;
		SetTeam( Team.None );
	}

	public void SetTeam( Team team )
	{
		SetClass( CurrentTeam.GetHudClass(), false );
		SetClass( team.GetHudClass(), true );
		CurrentTeam = team;
	}

	public void SetWeapon( Entity weapon )
	{
		if ( weapon.IsValid() && !weapon.IsWorld )
		{
			SetClass( "has-weapon", true );

			WeaponName.Style.FontColor = CurrentTeam.GetColor().Darken( 0.4f );

			if ( weapon is IKillFeedInfo feedInfo )
				WeaponName.Text = feedInfo.KillFeedName;
			else if ( weapon is Weapon typed && typed.Item.IsValid() )
				WeaponName.Text = typed.Item.Value.Name;
			else
				WeaponName.Text = weapon.Name;
		}
		else
		{
			SetClass( "has-weapon", false );
		}
	}
}
