@using System;
@using Sandbox;
@using Sandbox.UI;
@using Facepunch.CoreWars;
@using Sandbox.UI.Construct;

@namespace Facepunch.CoreWars.UI
@attribute [StyleSheet( "/ui/StageInfo.scss" )]
@inherits Panel

<root>
    <div class="container">
        <div class="box-container">
            <div class="box">
            <icon class="icon">schedule</icon>
                <label class="title">@TimeText</label>
            </div>
            <div class="box">
            <div @ref="Icon" class="icon"></div>
                <label class="title">@StageText</label>
            </div>
            <div class="box">
            <icon class="icon">arrow_circle_right</icon>
                <label class="title">@NextStageText</label>
            </div>
        </div>
    </div>
</root>

@code
{
    public string NextStageText => GetNextStageText();
    public string StageText => GetStageText();
    public string TimeText => GetTimeText();

    public Panel Icon { get; set; }

    public override void Tick()
    {
        if ( CoreWarsGame.TryGetState<GameState>( out var state ) )
        {
            var iconPath = state.Stage.GetIcon();
            Icon.Style.SetBackgroundImage( iconPath );
        }

        base.Tick();
    }

    protected override void OnParametersSet()
    {
        BindClass( "hidden", IsHidden );

        base.OnParametersSet();
    }

    protected override int BuildHash()
    {
        return HashCode.Combine( NextStageText, StageText, TimeText );
    }

    private string GetNextStageText()
    {
		if ( CoreWarsGame.TryGetState<GameState>( out var state ) )
		{
			return state.Stage.GetNextStage().GetName();
		}

		return string.Empty;
	}

	private string GetStageText()
	{
		if ( CoreWarsGame.TryGetState<GameState>( out var state ) )
		{
			return state.Stage.GetName();
		}

		return string.Empty;
	}

	private string GetTimeText()
	{
		if ( CoreWarsGame.TryGetState<GameState>( out var state ) )
		{
			return TimeSpan.FromSeconds( state.NextStageTime ).ToString( @"mm\:ss" );
		}

		return string.Empty;
	}

	private bool IsHidden()
	{
		if ( IDialog.IsActive() || !CoreWarsGame.IsState<GameState>() )
			return true;

		return false;
	}
}
